{% set intvars = interfaces[ansible_hostname] -%}
{% set fabricvars = fabric[ansible_hostname] -%}
!
{% for port in fabricvars.fabricports %}
interface {{ port }}
 no ipv6 nd suppress-ra
 ipv6 nd ra-interval 3
!
{% endfor %}
router bgp {{ fabricvars.asn }}
    bgp router-id {{ intvars['lo'].ipv4 }}
    network {{ intvars['lo'].ipv4 }}/32
{% if fabricvars.networks is defined %}
{% for network in fabricvars.networks %}
    network {{ network }}
{% endfor %}
{% endif %}
    maximum-paths 64
    bgp bestpath as-path multipath-relax
    bgp bestpath compare-routerid
    neighbor fabric peer-group
    neighbor fabric description Internal Fabric Network
    neighbor fabric capability extended-nexthop
    neighbor fabric advertisement-interval 0
    neighbor fabric timers 1 3
    neighbor fabric timers connect 3
    neighbor fabric remote-as external
{#    neighbor fabric prefix-list dc-fabric-in in
    neighbor fabric prefix-list dc-fabric-out out #}
{% for neighbor in fabricvars.fabricports %}
    neighbor {{ neighbor }} interface
    neighbor {{ neighbor }} peer-group fabric
{% endfor %}
!
address-family ipv6 unicast
  neighbor fabric activate
{% for neighbor in fabricvars.fabricports %}
  neighbor {{ neighbor }} activate
{% endfor %}
exit-address-family
!
{# ip prefix-list dc-fabric-in seq 10 permit 0.0.0.0/0
ip prefix-list dc-fabric-in seq 20 permit 10.0.0.0/24 le 32
{% if fabricvars.networks is defined %}
{% for network in fabricvars.networks %}
ip prefix-list dc-fabric-in seq {{ loop.index*10 + 100 }} permit {{ network }}
{% endfor %}
{% endif %}
ip prefix-list dc-fabric-in seq 500 deny any
ip prefix-list dc-fabric-out seq 10 permit 10.0.0.0/24 le 32
{% for network in fabricvars.networks %}
{% if not intvars.get('networks', None) or networks[network].source == ansible_hostname %}
ip prefix-list dc-fabric-out seq {{ loop.index*10 + 100 }} permit {{ network }}
{% endif %}
{% endfor %}
ip prefix-list dc-fabric-out seq 500 deny any
!
#}
